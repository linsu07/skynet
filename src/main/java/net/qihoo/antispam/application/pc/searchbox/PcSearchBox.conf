include "reference.conf"
app_name = "pcsearchbox 2.6.x antispam"
local=false

rules_group = [
  feature_group
  guid_group
  srcg_guid_group
  srcg_group
  ip_group
  srcg_lifestage_group
  check_judge_group
]

feature_group = {
  algorithm_list: [
    ${?HourModel}{ isJudgeModel = false, isFeatureModel = true,outputCols:[hour]}
    ${?IPsegModel}{ isJudgeModel = false, isFeatureModel = true,outputCols:[IPSeg]}
    ${?AgeModel}{ isJudgeModel = false, isFeatureModel = true}
    ${SearchEntranceTypeModel}{ isJudgeModel = false, isFeatureModel = true,outputCols:[srcType]}
    ${SrcExtractModel}{ isJudgeModel = false, isFeatureModel = true}
    ${BrowserExtractModel}{ isJudgeModel = false, isFeatureModel = true,outputCols:[browserName]}
    ${?AdClickHour}{isJudgeModel = false, isFeatureModel = true,inputCols: [ads_details.ad_clickdetails.click_time],outputCols: [adclick.hour]}
    ${DayOfWeekModel}{isJudgeModel = false, isFeatureModel = true,outputCols:[dayOfWeek]}
   ]
}

srcg_guid_group = {  #以guid为统计信息的算法集合
  groupkey:{statDimension:[site,srcg,guid]}
  major_feature_outputcols:[
  ]
  algorithm_list:[

    ${?QueryChangeTooQuick4pc}{name="QueryChangeTooQuick4pcCheck",inputCols:[tp,q,ts],
      outputCols:[QueryChangeTooQuick4pcCheck],isFeatureModel=false,isJudgeModel=true,transformTarget=["global"]}

  ]
}
srcg_group = {
  groupkey:{statDimension:[site,srcg]}

  algorithm_list:[
    ${NumericFeatureAdd}{name:SecondSearchCount,inputCols:["srcType|srcType==search2"],outputCols:[secondSearchCount], isFeatureModel=true,isJudgeModel=false,transformTarget=["local"]}
    ${FeaBasicOperationFeatureADD}{name: SugFinalCount,expression: "secondSearchCount/SPV",outputCols:[secondSearchRate],isFeatureModel=true,isJudgeModel=false,transformTarget=["local"]}
    ${NumericFeatureAdd}{name:Age0Count,inputCols:["age|age==0"],outputCols:[age0Count], isFeatureModel=true,isJudgeModel=false,transformTarget=["local"]}
    ${FeaBasicOperationFeatureADD}{name:Age0Rate,expression:"age0Count/SPV",outputCols:[age0Rate], isFeatureModel=true,isJudgeModel=false,transformTarget=["local"]}
    ${FeaBasicOperationFeatureADD}{name:ADCPV2ADSPV,expression:"ADCPV/ADSPV",outputCols:[ADCPV2ADSPV],isFeatureModel=true,isJudgeModel=false,trainSource="global",transformTarget=["local"]}
  ]
}

guid_group = {  #以guid为统计信息的算法集合
  groupkey:{statDimension:[guid]}
  major_feature_outputcols:[
  ]
  algorithm_list:[
    ${DiscreteFeatureAdd}{name="SrcgIndustryCountFeatureAddTF",MaxValue:true,inputCols:[srcg,ads_details.industry,ads_details.sub_industry,"ads_details.sub_industry|ads_details.ad_clicknum>0","ads_details.industry|ads_details.ad_clicknum>0"],
      outputCols:[scrgCount,adshowIndustryCount,adshowSubIndustryCount,adclickSubIndustryCount,adclickIndustryCount],isFeatureModel=true,isJudgeModel=false,transformTarget=["local"]}
    ${NumericFeatureAdd}{name="SPV_CPV_ETC",inputCols:[sid,click_num,ads_num,ads_clicknum],
      outputCols:[minispv,cpv,adshow,AdclickNum],isFeatureModel=true,isJudgeModel=false,transformTarget=["local"]}
    }
  ]
}

srcg_lifestage_group = {  #以guid为统计信息的算法集合
  groupkey:{statDimension:[site,srcg,lifestage]}
  algorithm_list:[
    ${?ClickPos4pc}{name="ClickPos4pcCheck", isFeatureModel=false,isJudgeModel=true,transformTarget=["global"]}
  ]
}
check_judge_group = {
  algorithm_list:[
    // guid_group
    // orignal mean = 1.31，sigma =0.7 ，加大一倍，判黑阈值10，判灰阈值7
    //all_nature:  mean:1.88225 simga:1.308952，判黑阈值18，判灰阈值13
    // linsu： 2020/08/07 重新修改， 大约5倍的sig判黑， 3倍sigma判灰
    //0810, 只判灰
    ${Check}{name:AdShowIndustryCheck,anomalyExpr:"adshowIndustryCount>=6",antiSpamType="BusyUser"
      , outputCols:[AdShowIndustryCheck],isFeatureModel=false,isJudgeModel=true,}
    // AdShowSubIndustryCheck ori mean = 1.394，sigma = 0.895， 但是由于和AdShowIndustry 共现性非常高， 所以只判一些极值，判黑阈值20，判灰阈值10
    //all_nature: mean: 2.1486585 sigma:1.6616096
    // linsu： 2020/08/07 2 但是由于和AdShowIndustry 共现性非常高， 所以只判一些极值，判黑阈值20，判灰阈值10

  ]
}

//高斯分布 sigma 包含之外的比例数据
// 3sigma = 1 / 370.398 (	0.2699796%)
// 4sigma = 1 / 15787 （0.006334%）
// 4.5sigma = 1 / 147159.5358    3.4 / 1000000 (每一边)  (0.0006795346249%	)
// 5sigma = 1 / 1744278 (0.0000573303%)
// 5.326724sigma =  1 / 10000000  (0.00001%)
// 5.730729sigma = 	1 / 100000000 (0.000001%	)
// 6sigma = 1 / 506797346 (0.0000001973%)